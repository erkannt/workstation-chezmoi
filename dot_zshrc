#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customized to my needs...
#
# MISC
alias ll="ls -lha"
alias mouse="xinput --set-button-map $(xinput list | grep M570 | cut -f 2 | cut -d '=' -f 2) 1 2 3 4 5 6 7 8 2 "

# SCIETY
alias lt="rm -f static/style.css && APP_ORIGIN=foo APP_SECRET=foo PGUSER=foo PGHOST=foo PGPASSWORD=foo PGDATABASE=foo TWITTER_API_KEY=foo TWITTER_API_SECRET_KEY=foo TWITTER_API_BEARER_TOKEN=foo ESLINT=--fix STYLELINT=--fix npx run-p --aggregate-output --continue-on-error --print-label --silent lint:stylelint lint:unused-exports build:css && make unused-sass"
alias jw="APP_ORIGIN=foo APP_SECRET=foo PGUSER=foo PGHOST=foo PGPASSWORD=foo PGDATABASE=foo TWITTER_API_KEY=foo TWITTER_API_SECRET_KEY=foo TWITTER_API_BEARER_TOKEN=foo bash -c 'npx jest --watch'"
alias glhf="git pull --prune && make dev"
alias tsw="npx tsc -w --project tsconfig.dev.json"
alias tsu="npx ts-unused-exports tsconfig.dev.json --silent --ignoreTestFiles"
alias mbt="make backstop-test"

# KUBERNETES
source <(kubectl completion zsh)
alias kc="kubectl"
alias kns="kubens"
alias ktx="kubectx"

# DOCKER
export DOCKER_BUILDKIT=1

# CHEZMOI
alias cm='chezmoi'
alias cms='chezmoi status'
alias cmgst='cm git status'
alias cmgcm='cm git commit'
alias cmgps='cm git push'

# ANSIBLE
alias ans='ansible-playbook'

# GIT
alias gst='git status'
alias gcm='git commit -m'
alias gpl='git pull'
alias gps='git push'
alias gfb='git fetch && git rebase'
alias gco='git checkout'
alias gap='git add --patch'

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# DEFAULT EDITOR
export EDITOR="vim"
export VISUAL="vim"

# PATH
export PATH=$PATH:$HOME/.bin

# RUST
source $HOME/.cargo/env

# vs code
alias vscode-install='tar -xzvf $(find ~/Downloads -type f -name "code-stable-x64*" | tail -n 1) --directory ~/.bin'
export PATH=$PATH:$HOME/.bin/VSCode-linux-x64
alias code='f() {code $1 > /dev/null 2>&1 &}; f'

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/mc mc

# other tools
alias cat='bat -n'

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/hff/.bin/google-cloud-sdk/path.zsh.inc' ]; then . '/home/hff/.bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/hff/.bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/hff/.bin/google-cloud-sdk/completion.zsh.inc'; fi

# permit overwriting of files with >
setopt CLOBBER

