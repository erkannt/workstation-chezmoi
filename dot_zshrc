#!/bin/zsh
#
# .zshrc - Zsh file loaded on interactive shell sessions.
#

# Zsh options.
setopt extended_glob

# Source zstyles you might use with antidote.
[[ -e ${ZDOTDIR:-~}/.zstyles ]] && source ${ZDOTDIR:-~}/.zstyles

# Clone antidote if necessary.
[[ -d ${ZDOTDIR:-~}/.antidote ]] ||
  git clone https://github.com/mattmc3/antidote ${ZDOTDIR:-~}/.antidote

  # Create an amazing Zsh config using antidote plugins.
  source ${ZDOTDIR:-~}/.antidote/antidote.zsh
  antidote load

export LANG=en_US.utf8

#export XDG_RUNTIME_DIR=/home/hff/.xdg_runtime

#####################
# TOOLS AND AlIASES #
#####################

# MISC
alias ll="ls -lha"
alias mouse="xinput list | grep M570 | cut -f 2 | cut -d '=' -f 2 | xargs -I {} xinput --set-button-map {} 1 2 3 4 5 6 7 8 2 "
alias mp="make -j -O"
alias invertcolours="xcalib -i -a"

# GOOGLE MEET
alias ml="meetctl launch eLife"
alias mlj="meetctl launch eLife && meetctl join deb-ccfz-bah"
alias mj="meetctl join deb-ccfz-bah"
alias mjj="meetctl join dwi-thof-rdh"
alias mjjj="meetctl join unf-fidk-fud"
alias mjp="meetctl join ikh-qkvs-skm"
alias ms="meetctl share"
alias mn="meetctl new | clip"

# SCIETY
alias lt="rm -f static/style.css && APP_ORIGIN=foo APP_SECRET=foo PGUSER=foo PGHOST=foo PGPASSWORD=foo PGDATABASE=foo TWITTER_API_KEY=foo TWITTER_API_SECRET_KEY=foo TWITTER_API_BEARER_TOKEN=foo ESLINT=--fix STYLELINT=--fix npx run-p --aggregate-output --continue-on-error --print-label --silent lint:stylelint lint:unused-exports build:css && make unused-sass"
alias jw="APP_ORIGIN=foo APP_SECRET=foo PGUSER=foo PGHOST=foo PGPASSWORD=foo PGDATABASE=foo TWITTER_API_KEY=foo TWITTER_API_SECRET_KEY=foo TWITTER_API_BEARER_TOKEN=foo bash -c 'npx jest --watch'"
alias glhf="git pull --prune && make dev"
alias tsw="npx tsc -w --project tsconfig.dev.json"
alias tsu="npx ts-unused-exports tsconfig.dev.json --silent --ignoreTestFiles"
alias mbt="make backstop-test"

# KUBERNETES
#source <(kubectl completion zsh)
alias kc="kubectl"
alias kns="kubens"
alias ktx="kubectx"

# DOCKER
export DOCKER_BUILDKIT=1

# CHEZMOI
alias cm='chezmoi'
alias cms='chezmoi status'
alias cmgst='cm git status'
alias cmgcm='cm git commit'
alias cmgps='cm git push'

# ANSIBLE
alias ans='ansible-playbook'

# GIT
alias gst='git status'
alias gcm='git commit -m'
alias gpl='git pull'
alias gps='git push'
alias gfb='git fetch && git rebase'
alias gco='git checkout'
alias gap='git add --patch'

# Anker Cam
alias cam='cameractrls.py -c zoom_absolute=230 && cameractrls.py -c auto_exposure=manual_mode && cameractrls.py -c exposure_time_absolute=28'
alias came='f() {cameractrls.py -c exposure_time_absolute=$1}; f'

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# DEFAULT EDITOR
export EDITOR="vim"
export VISUAL="vim"

# PATH
export PATH=$PATH:$HOME/.bin

# RUST
source $HOME/.cargo/env

# GOLANG
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# PYTHON
export PATH=$PATH:$HOME/.local/bin

# vs code
alias vscode-install='tar -xzvf $(find ~/Downloads -type f -name "code-stable-x64*" | sort | tail -n 1) --directory ~/.bin'
export PATH=$PATH:$HOME/.bin/VSCode-linux-x64
alias code='f() {code $1 > /dev/null 2>&1 &}; f'

# minio
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/mc mc

# other tools
alias cat='bat -n'
alias clip='xclip -selection c'
export FLYCTL_INSTALL="/home/hff/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

# permit overwriting of files with >
setopt CLOBBER

# bun completions
[ -s "/home/hff/.bun/_bun" ] && source "/home/hff/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# quickemu
export PATH="$HOME/.bin/quickemu:$PATH"


# Mise en place
eval "$(mise activate zsh)"

#AWSume alias to source the AWSume script
alias awsume="source awsume"

#Kill all containers
alias dkill="docker ps -q | xargs --no-run-if-empty -n 1 docker kill"

# rebind and configure zsh-z
alias j=z
zstyle ':completion:*' menu select
export ZSHZ_TILDE=1

# History substring search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# pure prompt styling
zstyle ':prompt:pure:prompt:success' color green
zstyle ':prompt:pure:prompt:continuation' color magenta
zstyle ':prompt:pure:git:dirty' color yellow

# Makefile completions
zstyle ':completion:*:*:make:*' tag-order 'targets' 



# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/hff/.local/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/home/hff/.local/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/hff/.local/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/hff/.local/bin/google-cloud-sdk/completion.zsh.inc'; fi

# Turso
export PATH="/home/hff/.turso:$PATH"

autoload -Uz compinit
fpath+=~/.zfunc
